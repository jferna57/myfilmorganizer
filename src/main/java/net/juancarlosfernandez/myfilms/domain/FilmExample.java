package net.juancarlosfernandez.myfilms.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FilmExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public FilmExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdFilmIsNull() {
            addCriterion("ID_FILM is null");
            return (Criteria) this;
        }

        public Criteria andIdFilmIsNotNull() {
            addCriterion("ID_FILM is not null");
            return (Criteria) this;
        }

        public Criteria andIdFilmEqualTo(Long value) {
            addCriterion("ID_FILM =", value, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmNotEqualTo(Long value) {
            addCriterion("ID_FILM <>", value, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmGreaterThan(Long value) {
            addCriterion("ID_FILM >", value, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmGreaterThanOrEqualTo(Long value) {
            addCriterion("ID_FILM >=", value, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmLessThan(Long value) {
            addCriterion("ID_FILM <", value, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmLessThanOrEqualTo(Long value) {
            addCriterion("ID_FILM <=", value, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmIn(List<Long> values) {
            addCriterion("ID_FILM in", values, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmNotIn(List<Long> values) {
            addCriterion("ID_FILM not in", values, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmBetween(Long value1, Long value2) {
            addCriterion("ID_FILM between", value1, value2, "idFilm");
            return (Criteria) this;
        }

        public Criteria andIdFilmNotBetween(Long value1, Long value2) {
            addCriterion("ID_FILM not between", value1, value2, "idFilm");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("TITLE is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("TITLE is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("TITLE =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("TITLE <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("TITLE >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("TITLE >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("TITLE <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("TITLE <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("TITLE like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("TITLE not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("TITLE in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("TITLE not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("TITLE between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("TITLE not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andLocationIsNull() {
            addCriterion("LOCATION is null");
            return (Criteria) this;
        }

        public Criteria andLocationIsNotNull() {
            addCriterion("LOCATION is not null");
            return (Criteria) this;
        }

        public Criteria andLocationEqualTo(String value) {
            addCriterion("LOCATION =", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotEqualTo(String value) {
            addCriterion("LOCATION <>", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThan(String value) {
            addCriterion("LOCATION >", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationGreaterThanOrEqualTo(String value) {
            addCriterion("LOCATION >=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThan(String value) {
            addCriterion("LOCATION <", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLessThanOrEqualTo(String value) {
            addCriterion("LOCATION <=", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationLike(String value) {
            addCriterion("LOCATION like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotLike(String value) {
            addCriterion("LOCATION not like", value, "location");
            return (Criteria) this;
        }

        public Criteria andLocationIn(List<String> values) {
            addCriterion("LOCATION in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotIn(List<String> values) {
            addCriterion("LOCATION not in", values, "location");
            return (Criteria) this;
        }

        public Criteria andLocationBetween(String value1, String value2) {
            addCriterion("LOCATION between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andLocationNotBetween(String value1, String value2) {
            addCriterion("LOCATION not between", value1, value2, "location");
            return (Criteria) this;
        }

        public Criteria andFilenameIsNull() {
            addCriterion("FILENAME is null");
            return (Criteria) this;
        }

        public Criteria andFilenameIsNotNull() {
            addCriterion("FILENAME is not null");
            return (Criteria) this;
        }

        public Criteria andFilenameEqualTo(String value) {
            addCriterion("FILENAME =", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotEqualTo(String value) {
            addCriterion("FILENAME <>", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameGreaterThan(String value) {
            addCriterion("FILENAME >", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameGreaterThanOrEqualTo(String value) {
            addCriterion("FILENAME >=", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameLessThan(String value) {
            addCriterion("FILENAME <", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameLessThanOrEqualTo(String value) {
            addCriterion("FILENAME <=", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameLike(String value) {
            addCriterion("FILENAME like", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotLike(String value) {
            addCriterion("FILENAME not like", value, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameIn(List<String> values) {
            addCriterion("FILENAME in", values, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotIn(List<String> values) {
            addCriterion("FILENAME not in", values, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameBetween(String value1, String value2) {
            addCriterion("FILENAME between", value1, value2, "filename");
            return (Criteria) this;
        }

        public Criteria andFilenameNotBetween(String value1, String value2) {
            addCriterion("FILENAME not between", value1, value2, "filename");
            return (Criteria) this;
        }

        public Criteria andLastChangeIsNull() {
            addCriterion("LAST_CHANGE is null");
            return (Criteria) this;
        }

        public Criteria andLastChangeIsNotNull() {
            addCriterion("LAST_CHANGE is not null");
            return (Criteria) this;
        }

        public Criteria andLastChangeEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_CHANGE =", value, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeNotEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_CHANGE <>", value, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeGreaterThan(Date value) {
            addCriterionForJDBCDate("LAST_CHANGE >", value, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_CHANGE >=", value, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeLessThan(Date value) {
            addCriterionForJDBCDate("LAST_CHANGE <", value, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LAST_CHANGE <=", value, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_CHANGE in", values, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeNotIn(List<Date> values) {
            addCriterionForJDBCDate("LAST_CHANGE not in", values, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_CHANGE between", value1, value2, "lastChange");
            return (Criteria) this;
        }

        public Criteria andLastChangeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LAST_CHANGE not between", value1, value2, "lastChange");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FILM
     *
     * @mbggenerated do_not_delete_during_merge Fri Dec 10 20:19:30 CET 2010
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FILM
     *
     * @mbggenerated Fri Dec 10 20:19:30 CET 2010
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}